
// Utilit√°rios para o Devocional Guiado

export interface StepDuration {
  respira: number;
  palavra: number;
  oracao: number;
  acao: number;
}

export const STEP_DURATIONS: Record<5 | 10 | 15, StepDuration> = {
  5: {
    respira: 60,   // 1 min
    palavra: 90,   // 1.5 min
    oracao: 90,    // 1.5 min
    acao: 60,      // 1 min
  },
  10: {
    respira: 90,   // 1.5 min
    palavra: 180,  // 3 min
    oracao: 180,   // 3 min
    acao: 90,      // 1.5 min
  },
  15: {
    respira: 120,  // 2 min
    palavra: 240,  // 4 min
    oracao: 240,   // 4 min
    acao: 180,     // 3 min
  },
};

export type StepName = 'respira' | 'palavra' | 'oracao' | 'acao';

export interface BreathingPhase {
  type: 'inhale' | 'hold' | 'exhale';
  duration: number;
  text: string;
}

export const BREATHING_RHYTHM: BreathingPhase[] = [
  { type: 'inhale', duration: 4, text: 'Inspire em 4...' },
  { type: 'hold', duration: 4, text: 'Segure 4...' },
  { type: 'exhale', duration: 6, text: 'Solte em 6...' },
];

export const STEP_TEXTS = {
  respira: {
    title: 'Respire',
    description: 'Inspire em 4‚Ä¶ segure 4‚Ä¶ solte em 6.',
    instruction: 'Concentre-se na sua respira√ß√£o e acalme sua mente.',
  },
  palavra: {
    title: 'Palavra',
    description: 'Ou√ßa a Palavra de Deus',
    instruction: 'Permita que a mensagem penetre em seu cora√ß√£o.',
  },
  oracao: {
    title: 'Ora√ß√£o',
    description: 'Converse com Deus',
    instruction: 'Diga a Deus, com suas palavras, onde voc√™ precisa de dire√ß√£o hoje.',
    suggestions: [
      'Ore por dire√ß√£o hoje.',
      'Agrade√ßa por algo espec√≠fico.',
    ],
  },
  acao: {
    title: 'A√ß√£o',
    description: 'Leve a mensagem com voc√™',
    instruction: 'Escolha 1 passo simples para hoje.',
  },
};

// Sugest√µes de a√ß√µes di√°rias variadas (ciclo de 30 dias)
export const DAILY_ACTION_SUGGESTIONS = [
  'Enviar uma mensagem de encorajamento para algu√©m',
  'Dedicar 5 minutos de ora√ß√£o pela manh√£',
  'Ler um cap√≠tulo adicional da B√≠blia hoje',
  'Praticar gratid√£o: escrever 3 coisas pelas quais voc√™ √© grato',
  'Ajudar algu√©m sem esperar nada em troca',
  'Compartilhar um vers√≠culo b√≠blico nas redes sociais',
  'Ligar para um amigo ou familiar que voc√™ n√£o fala h√° tempo',
  'Fazer um ato de bondade an√¥nimo',
  'Perdoar algu√©m que te magoou',
  'Dedicar 10 minutos para meditar em sil√™ncio',
  'Doar algo que voc√™ n√£o usa mais',
  'Escrever uma carta de gratid√£o para Deus',
  'Jejuar de redes sociais por algumas horas',
  'Orar por algu√©m que voc√™ considera um inimigo',
  'Ler um salmo em voz alta',
  'Praticar paci√™ncia em uma situa√ß√£o desafiadora',
  'Compartilhar sua f√© com algu√©m pr√≥ximo',
  'Fazer uma boa a√ß√£o em segredo',
  'Assistir a um culto ou prega√ß√£o online',
  'Escrever suas ora√ß√µes em um di√°rio',
  'Agradecer a Deus antes de cada refei√ß√£o hoje',
  'Memorizar um vers√≠culo b√≠blico',
  'Fazer uma lista de b√™n√ß√£os recebidas',
  'Ouvir m√∫sica crist√£ durante o dia',
  'Refletir sobre como voc√™ pode servir melhor aos outros',
  'Pedir perd√£o a algu√©m que voc√™ magoou',
  'Dedicar tempo para orar por sua fam√≠lia',
  'Praticar humildade em suas a√ß√µes hoje',
  'Compartilhar uma experi√™ncia de f√© com algu√©m',
  'Louvar a Deus mesmo nas dificuldades do dia',
];

export function getDailyActionSuggestion(day: number): string {
  const index = (day - 1) % DAILY_ACTION_SUGGESTIONS.length;
  return DAILY_ACTION_SUGGESTIONS[index];
}

export function getStepDuration(minutes: 5 | 10 | 15, step: StepName): number {
  return STEP_DURATIONS[minutes][step];
}

export function getTotalDuration(minutes: 5 | 10 | 15): number {
  const durations = STEP_DURATIONS[minutes];
  return durations.respira + durations.palavra + durations.oracao + durations.acao;
}

export function vibrate(pattern: number | number[]) {
  if (typeof window !== 'undefined' && 'vibrate' in navigator) {
    navigator.vibrate(pattern);
  }
}

export function formatTime(seconds: number): string {
  if (isNaN(seconds)) return '0:00';
  const mins = Math.floor(seconds / 60);
  const secs = Math.floor(seconds % 60);
  return `${mins}:${secs.toString().padStart(2, '0')}`;
}

// Analytics helper
export function trackDevotionalEvent(
  event: string,
  properties?: Record<string, any>
) {
  if (typeof window !== 'undefined') {
    console.log('üìä Analytics:', event, properties);
    // Aqui voc√™ pode integrar com Google Analytics, Mixpanel, etc.
  }
}
